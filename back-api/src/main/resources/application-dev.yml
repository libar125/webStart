server:
  port: 6001
spring:
  # Sa-Token配置
  sa-token:
    # token前缀
    # Token前缀 与 Token值 之间必须有一个空格。
    # 一旦配置了 Token前缀，则前端提交 Token 时，必须带有前缀，否则会导致框架无法读取 Token。
    # 由于Cookie中无法存储空格字符，也就意味配置 Token 前缀后，Cookie 鉴权方式将会失效，此时只能将 Token 提交到header里进行传输
    # token-prefix: Bearer
    # token 名称 (同时也是cookie名称)
    token-name: satoken
    # token 有效期，单位s 默认30天, -1代表永不过期
    timeout: 2592000
    # token 临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
    activity-timeout: -1
    # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
    is-concurrent: true
    # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
    is-share: false
    # token风格
    token-style: uuid
    # 是否输出操作日志
    is-log: true
    # 配置 Sa-Token 单独使用的 Redis 连接
    alone-redis:
      # Redis数据库索引（默认为0）
      database: 0
      # Redis服务器地址
      host: 127.0.0.1
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password:
      # 连接超时时间
      timeout: 10s
  # 配置业务使用的 Redis 连接
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间
    timeout: 10s
  datasource:
    hikari:
      connection-test-query: SELECT 1
      connection-timeout: 6000
      validation-timeout: 300
      idle-timeout: 6000
      login-timeout: 5
      max-lifetime: 600
      maximum-pool-size: 2
      minimum-idle: 2
      read-only: false
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://139.155.235.122/web_start?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: root
    password: guhGJUfwefe#123

